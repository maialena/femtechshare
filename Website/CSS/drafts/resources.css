/*EXPERIMENT WITH FLEXBOX...*/


/*MAKE RESOURCE PAGE LOOK LIKE THIS EVENTUALLY 
http://startbootstrap.com/bootstrap-resources/
*/


/*Flexbox gives us the flexiness we need. The top just stays put as there is no scrolling on the body due to the page never exceeding viewport height*/

.Top {
    display: flex;
    position: relative;
    /*z-index: 10;*/
}


/*This is our main wrapping element, it's made 100vh high to ensure it is always the correct size and then moved into place and padded with negative margin and padding*/

.Container {
    display: flex;
    overflow: hidden;
    height: 100vh;
    margin-top: -100px;
    padding-top: 150px;
    /*position: relative;*/
    width: 100%;
    /* backface-visibility: hidden;*/
}


/*All the scrollable sections should overflow and be whatever height they need to be. As they are flex-items (due to being inside a flex container) they could be made to stretch full height at all times if needed.
WebKit inertia scrolling is being added here for any present/future devices that are able to make use of it.
*/

.Left,
.Middle,
.Right {
    overflow: auto;
    height: auto;
    padding: .5rem;
    -webkit-overflow-scrolling: touch;
    -ms-overflow-style: none;
}


/*Entirely optional â€“ just wanted to remove the scrollbar on WebKit browsers as I find them ugly
.Left::-webkit-scrollbar,
.Middle::-webkit-scrollbar,
.Right::-webkit-scrollbar {
    display: none;
}
*/


/*  Left and Right are set sizes while the Middle is set to flex one so it occupies all remaining space. This could be set as a width too if prefereable, perhaps using calc.*/

.Left {
    width: 12.5rem;
}

.Middle {
    flex: 1;
    border: 3px rebeccapurple solid;
}

.Right {
    width: 12.5rem;
}

.titles {
    font-size: 30px;
    text-align: center;
    font-family: cursive;
    border: 1px solid;
}

div div ul {
    padding: 30px;
    list-style: none;
    font-size: 20px;
    text-align: center;
}

.blackBar {
    display: flex;
    flex: 1;
}

nav ul a {
    padding: 0 30px 0 0;
    margin: -100;
}