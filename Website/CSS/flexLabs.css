/*setup */

html {
    box-sizing: border-box;
}

*,
*:before,
*:after {
    box-sizing: ihnerit;
}

body {
    font-family: sans-serif;
    margin: 0;
    background-image: linear-gradient(260deg, #2376ae 0%, #c16ecf 100%);
}


/*from flexMain */

h1 {
    text-align: center;
    color: white;
    font-size: 40px;
}

a:hover {
    background: rgba(0, 0, 0, 0.3);
}


/*constrain the width of the navigation with a wrapper */

.wrapper {
    max-width: 1000px;
    margin: 0 auto;
    padding: 50px;
    display: flex;
    flex-direction: column;
}

.wrapper > * {
    flex: 9999;
}


/*Flex Container*/

.flex-nav ul {
    /*border: 1px solid black;*/
    /*list-style is what makes the list items merge together as one clump */
    list-style: none;
    margin: 0;
    padding: 0;
    /*display:flex is what makes the items go left to right since default flex-direction is row*/
    /*they'll take exact as much room as needed...so need to fill out the extra space */
    display: flex;
}


/*to take care of extra space make each item 'li' fill the extra space evenly */

.flex-nav li {
    /*flex:1 sets flex grow (too much space) and flex shrink (not enough space) */
    flex: 3;
}

.flex-nav .social {
    flex: 1;
}


/*now want to talk about mobile */


/*once we hit 1000px (small) we want our social icons to be under the main elem */


/* to do this we need to turn on our wrapper */


/*Flex Item Ordering */

.flex-nav {
    order: 1;
}

.top {
    order: 2;
}

.lesson {
    order: 3
}

input {
    padding: 10px;
    border: 0;
}


/* Style */

.resources {
    font-size: 23px;
    text-decoration: bold;
}

a {
    color: purple;
}

ul li {
    list-style: none;
}

ol li {
    padding: 10px;
}


/*NEW from cs61c: Style for terminal code*/

li {
    line-height: 135%;
}

table {
    border-collapse: collapse;
    border-spacing: 0;
}


/*body {
    font-family: sans-serif;
    font-size: 20px;
}*/

.exercise {
    font-size: 35px;
    font-family: Cambria, Cochin, Georgia, Times, Times New Roman, serif;
    /*background-image: -webkit-gradient(linear, left top, left bottom, from(darkgrey), to(lightgrey));
    background-image: -webkit-linear-gradient(top, darkgrey, lightgrey);
    background-image: -moz-linear-gradient(top, darkgrey, lightgrey);
    background-image: linear-gradient(to bottom, darkgrey, lightgrey);*/
    border: 3px black solid;
    text-align: center;
    padding: 20px;
    margin: 20px;
    text-transform: uppercase;
}

p {
    padding: 10px;
}

.heading {
    font-size: 40px;
    text-decoration: bold;
    text-decoration: uppercase;
    text-align: center;
    padding: 20px;
}

.subtitle {
    font-size: 30px;
    text-decoration: underline;
    padding: 5px;
}

pre {
    background: #cdc;
    border: 1px dotted #aba;
    margin: 0;
    padding: 10px;
}

.input {
    font-family: monospace;
    color: #004080;
    font-weight: bold;
}

.output {
    font-family: monospace;
    color: #800080
}

code {
    white-space: nowrap;
    font-size: 1.1em;
}

div.checkoff {
    /*background: #eeeee0;*/
    background: #eeeee1;
    /*padding: 0.5em 1.5em 0.5em 1.5em;*/
    border-radius: 1em;
    border: 1px solid #ddd;
    padding: 20px;
}

.emphasis {
    font-weight: 75;
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
}

.question {
    font-style: italic;
}

.warpper img {
    /*display: flex;
    flex-wrap: wrap;*/
    margin: 0 auto;
    /*padding: 30px;*/
    border: 1px black solid;
    /*how to get the image to resize with the page: http://stackoverflow.com/questions/30788131/css3-flexbox-maintain-image-aspect-ratio */
    /*create a flex wrapper around image and then set its width to 100% its flex parent*/
    width: 100%;
}

h1 {
    text-align: center;
    color: white;
    font-size: 40px;
}

a:hover {
    background: rgba(0, 0, 0, 0.3);
}

.flex-nav a {
    font-size: 20px;
    color: white;
    font-weight: 100;
    letter-spacing: 2px;
    text-decoration: none;
    background: rgba(0, 0, 0, 0.2);
    padding: 20px 1px;
    display: inline-block;
    width: 100%;
    text-align: center;
    transition: all 0.5s;
}

.lesson {
    background: rgba(238, 238, 238, 1);
    padding: 50px;
    color: black;
    border-radius: 5px;
    font-size: 16px;
    line-height: 135%;
}


/*for lab2 color theory */

.red {
    color: #FF0000;
}

.green {
    color: #00FF00;
}

.blue {
    color: #0000FF;
}

.hslRed {
    color: #FF0000;
}

.hslGreen {
    color: #00FF00;
}

.hslBlue {
    color: #0000FF;
}

.color {
    background: orange;
    color: blue;
    border: 3px dashed purple;
}


/*shades of red */

.hsla0 {
    color: hsla(0, 100%, 50%, 0);
}

.hsla1 {
    color: hsla(0, 100%, 50%, .1);
}

.hsla2 {
    color: hsla(0, 100%, 50%, .2);
}

.hsla3 {
    color: hsla(0, 100%, 50%, .3);
}

.hsla4 {
    color: hsla(0, 100%, 50%, .4);
}

.hsla5 {
    color: hsla(0, 100%, 50%, .5);
}

.hsla6 {
    color: hsla(0, 100%, 50%, .6);
}

.hsla7 {
    color: hsla(0, 100%, 50%, .7);
}

.hsla8 {
    color: hsla(0, 100%, 50%, .8);
}

.hsla9 {
    color: hsla(0, 100%, 50%, .9);
}

.hsla10 {
    color: hsla(0, 100%, 50%, 1);
}


/*for green example */

.hslag0 {
    background-color: hsla(120, 100%, 50%, 0);
}

.hslag1 {
    background-color: hsla(120, 100%, 50%, .1);
}

.hslag2 {
    background-color: hsla(120, 100%, 50%, .2);
}

.hslag3 {
    background-color: hsla(120, 100%, 50%, .3);
}

.hslag4 {
    background-color: hsla(120, 100%, 50%, .4);
}

.hslag5 {
    background-color: hsla(120, 100%, 50%, .5);
}

.hslag6 {
    background-color: hsla(120, 100%, 50%, .6);
}

.hslag7 {
    background-color: hsla(120, 100%, 50%, .7);
}

.hslag8 {
    background-color: hsla(120, 100%, 50%, .8);
}

.hslag9 {
    background-color: hsla(120, 100%, 50%, .9);
}

.hslag10 {
    background-color: hsla(120, 100%, 50%, 1);
}


/*don't display toggleNav when main screen */

.flex-nav .toggleNav {
    display: none;
}

@media all and (max-width: 1000px) {
    .flex-nav ul {
        /*don't wnat flex-direction column since will all stack */
        /*flex-direction: column;*/
        flex-wrap: wrap;
        /*flex wrap won't work without some height. Do this with flex-basis property */
    }
    .flex-nav li {
        /*grow shrink baseline */
        /*baseline 50% means will be 50% widened, so will stack in two columns */
        /*problem here is that social ones are squished to the right. Why? Open up inspect and see that this flex: 1 1 50% is being overwritdden by flex-nav .social {flex:1}; */
        flex: 1 1 25%;
    }
    /*need to specify a flex basis on that .social case */
    .flex-nav .social {
        flex: 1 1 5%;
    }
}


/*new conditions when screen is really smushed */

@media all and (max-width: 570px) {
    .flex-nav a {
        font-size: 16px;
        padding: 5px 0;
    }
    .flex-nav ul {
        /*don't wnat flex-direction column since will all stack */
        /*flex-direction: column;*/
        flex-wrap: wrap;
        /*flex wrap won't work without some height. Do this with flex-basis property */
    }
    .flex-nav li {
        /*grow shrink baseline */
        /*baseline 50% means will be 50% widened, so will stack in two columns */
        /*problem here is that social ones are squished to the right. Why? Open up inspect and see that this flex: 1 1 50% is being overwritdden by flex-nav .social {flex:1}; */
        flex: 1 1 30%;
    }
    /*need to specify a flex basis on that .social case */
    .flex-nav .social {
        flex: 1 1 20%;
    }
}

@media all and (max-width: 500px) {
    .flex-nav li {
        flex-basis: 100%;
        /*this makes them all stack */
    }
    /*Flex Container */
    .wrapper {
        display: flex;
        /*nothing changes at first, but when hit 500px breakpoint everything breaks */
        /*need to change flex-directioN! */
        flex-direction: column;
    }
    /*Flex item */
    .wrapper > * {
        /*just needs to be > 1 */
        order: 9999;
    }
    .flex-nav {
        /*making it 1 sends nav to the end, because by default the order for everything is 0 */
        /*so need to set the default order for everything else */
        order: 1;
    }
    /*display the Menu toggleNav */
    .flex-nav .toggleNav {
        display: block;
    }
    .flex-nav ul {
        display: none;
    }
    /*jQuery toggle or slideToggle turns the flex container to display:block but we need display:flex */
    .flex-nav ul.open {
        display: flex;
    }
    /*reorder when screen is small */
    .top {
        order: 2;
    }
    .lesson {
        order: 3;
    }
}


/*STYLE FOR FUN CSS3 TEXT */


/*
USE MULTIPLE SHADOWS TO CREATE 3D EFFECT http://markdotto.com/playground/3d-text/*/


/*http://hallofhavoc.com/2011/03/cool-text-effects-using-css3-text-shadow/*/


/*COOL EFFECTS */


/*SOMETHING ELSE TO PLAY WITH AT SOME POINT: TEXT OVER IMAGE!: http://www.w3schools.com/css/css_positioning.asp */

.threeD {
    text-shadow: 0 1px 0 #ccc, 0 2px 0 #c9c9c9, 0 3px 0 #bbb, 0 4px 0 #b9b9b9, 0 5px 0 #aaa, 0 6px 1px rgba(0, 0, 0, .1), 0 0 5px rgba(0, 0, 0, .1), 0 1px 3px rgba(0, 0, 0, .3), 0 3px 5px rgba(0, 0, 0, .2), 0 5px 10px rgba(0, 0, 0, .25), 0 10px 10px rgba(0, 0, 0, .2), 0 20px 20px rgba(0, 0, 0, .15);
    position: relative;
    left: 30px;
    width: 500px;
    font-size: 70px;
    color: purple;
    top: -20px;
    /*border: 1px solid red;*/
}

.inset {
    text-shadow: 0px -2px 0px #333, 0px 2px 3px #666;
    position: relative;
    top: -50px;
    right: -200px;
    width: 500px;
    height: 100px;
    font-size: 80px;
    color: blue;
    /*border: 3px solid green;*/
}

.neon {
    text-shadow: 0 0 10px #fff, 0 0 20px #fff, 0 0 30px #fff, 0 0 40px #ff00de, 0 0 70px #ff00de, 0 0 80px #ff00de, 0 0 100px #ff00de, 0 0 150px #ff00de;
    font-size: 90px;
    color: orange;
    position: relative;
    right: -600px;
    bottom: -100px;
    width: 100px;
    height: 100px;
    /*border: 1px solid blue;*/
}

.emboss {
    margin: 50px auto;
    text-align: center;
    text-shadow: -1px -1px 0 rgba(255, 255, 255, 0.3), 1px 1px 0 rgba(0, 0, 0, 0.8);
    color: #333;
    font-size: 70px;
    position: relative;
    bottom: 10px;
    right: 10px;
    width: 600px;
    padding: 50px;
    border-radius: 15px;
    background: grey;
    /*border: 3px solid yellow;*/
}

iframe {
    width: 100%;
    text-align: right;
    margin: 20px;
}

#workshop {
    color: blue;
    font-size: 60px;
    background-color: cyan;
    text-decoration: bold;
    border: 3px solid yellow;
    font-family: Ariel;
    padding: 50px;
    margin: 50px;
    letter-spacing: 5px;
    text-align: center;
    border-radius: 50%;
}